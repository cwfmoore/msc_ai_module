[dataset_features]
continuous_features = [
    "previous_qualification_grade",
    "admission_grade", 
    "age_at_enrollment",
    "curricular_units_1st_sem_grade",
    "curricular_units_2nd_sem_grade",
    "unemployment_rate",
    "inflation_rate", 
    "gdp",
    "curricular_units_1st_sem_credited",
    "curricular_units_1st_sem_enrolled",
    "curricular_units_1st_sem_evaluations",
    "curricular_units_1st_sem_approved",
    "curricular_units_1st_sem_without_evaluations",
    "curricular_units_2nd_sem_credited",
    "curricular_units_2nd_sem_enrolled",
    "curricular_units_2nd_sem_evaluations",
    "curricular_units_2nd_sem_approved",
    "curricular_units_2nd_sem_without_evaluations"
]
categorical_features = [
    "marital_status",
    "application_mode", 
    "application_order",
    "course",
    "daytime_evening_attendance",
    "previous_qualification",
    "nationality",
    "mothers_qualification",
    "fathers_qualification", 
    "mothers_occupation",
    "fathers_occupation",
    "displaced",
    "educational_special_needs",
    "debtor",
    "tuition_fees_up_to_date",
    "gender",
    "scholarship_holder",
    "international"
]

[k-NN_model]
scaler_type = "minmax" # Options: "standard", "minmax"
train_size = 0.8 # Proportion of the dataset to include in the train split
stratify = true # Whether to stratify the train-test split
n_neighbors = 5 # Set to false will result in the search for the best number of neighbors
n_neighbors_range = [3, 10] # Range of neighbors to search for the best one
cv = 10 # Number of folds for cross-validation
scoring = "f1"
